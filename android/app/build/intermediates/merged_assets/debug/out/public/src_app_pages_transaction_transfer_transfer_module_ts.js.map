{"version":3,"file":"src_app_pages_transaction_transfer_transfer_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wDAAY;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACmB;AAErB;AAEyB;AACK;AAE5B;IAalC,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAX9B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,+EAAyB;YACzB,+DAAmB;YACnB,2EAAgB;SACjB;QACD,YAAY,EAAE,CAAC,wDAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBkC;AACJ;AACoB;AACxC;AAC0B;AACS;AAE1C;AA0BhB;AAElB,oDAAc,CACZ,gDAAU,EACV,iDAAW,EACX,gDAAU,EACV,kDAAY,EACZ,mDAAa,EACb,sDAAgB,EAChB,wDAAkB,EAClB,oDAAc,EACd,mDAAa,EACb,yDAAmB,EACnB,qDAAe,EACf,uDAAiB,EACjB,mDAAa,EACb,iDAAW,EACX,sDAAgB,EAChB,uDAAiB,EACjB,+CAAS,EACT,qDAAe,EACf,4CAAM,EACN,4CAAM,EACN,2CAAK,EACL,6CAAO,CACR,CAAC;IAOW,YAAY,SAAZ,YAAY;IAqFvB,YACU,MAAc,EACd,EAAe,EACf,cAA8B,EAC9B,QAA6B,EAC7B,QAAsB;QAJtB,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAa;QACf,mBAAc,GAAd,cAAc,CAAgB;QAC9B,aAAQ,GAAR,QAAQ,CAAqB;QAC7B,aAAQ,GAAR,QAAQ,CAAc;QAxFhC,SAAI,GAAG,IAAI,4CAAO,EAAE;QAIpB,SAAI,GAAG;YACL,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE;YACxB,QAAQ,EAAE;gBACV;oBACE,KAAK,EAAE,WAAW;oBAClB,eAAe,EAAE,kBAAkB;oBACnC,gBAAgB,EAAE,CAAC;oBACnB,gBAAgB,EAAE,CAAC;oBACnB,yBAAyB,EAAE,oBAAoB;oBAC/C,qBAAqB,EAAE,qBAAqB;oBAC5C,qBAAqB,EAAE,CAAC;oBACxB,WAAW,EAAE,CAAC;oBACd,cAAc,EAAE,CAAC;oBACjB,WAAW,EAAE,kBAAkB;oBAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;oBAC1B,IAAI,EAAE,KAAK;iBACZ;aAAC;SACH,CAAC;QACF,WAAM,GAAG;YACP,IAAI,EAAE,KAAkB;YACxB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE;gBACP,SAAS,EAAE;oBACP,QAAQ,EAAE,IAAI;iBACjB;gBACD,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE;oBACL,OAAO,EAAE,IAAI;oBACZ,QAAQ,EAAE,KAAK;oBACf,IAAI,EAAE,YAAY;oBAClB,QAAQ,EAAE,EAAE;oBACZ,SAAS,EAAE,iBAAiB;iBAC7B;gBACD,MAAM,EAAE;oBACP,OAAO,EAAE,IAAI;oBACZ,QAAQ,EAAE,QAAQ;oBAClB,MAAM,EAAE;wBACP,SAAS,EAAE,iBAAiB;wBAC3B,QAAQ,EAAE,EAAE;qBACb;iBACF;aACH;SACF,CAAC;QACF,iBAAY,GAAG;YACb,GAAG,EAAE,WAAW;YAChB,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,QAAQ;YACb,GAAG,EAAE,OAAO;SACb,CAAC;QACF,cAAS,GAAW,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC;QACpD,kBAAa,GAAW,CAAC,CAAC;QAC1B,cAAS,GAAmB,EAAE;QAE9B,eAAU,GAA+B;YACvC,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,OAAO;YACd,GAAG,EAAE,SAAS;YACd,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,SAAS;SAClB,CAAC;QACF,qBAAgB,GAAC,KAAK;QACtB,oBAAe,GAAG,IAAI,qDAAS,CAAC;YAC9B,aAAa,EAAE,IAAI,uDAAW,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC/G,YAAY,EAAE,IAAI,uDAAW,CAAC,CAAC,EAAE,+DAAmB,CAAC;YACrD,SAAS,EAAE,IAAI,uDAAW,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC9E,UAAU,EAAE,IAAI,uDAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,+DAAmB,CAAC;YAClF,eAAe,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACzD,cAAc,EAAE,IAAI,uDAAW,CAAC,EAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,+DAAmB,CAAC;YAChF,YAAY,EAAE,IAAI,uDAAW,CAAC,KAAK,EAAE,+DAAmB,CAAC;YACzD,MAAM,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,+DAAmB,CAAC;SACjD,CAAC,CAAC;QAIH,cAAS,GAAG,KAAK,CAAC;QAClB,aAAQ,GAAG,KAAK,CAAC;QACjB,iBAAY,GAAG,KAAK,CAAC;IAQjB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvE,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAC9B,CAAC,CAAC;QACF,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAsB,CAAC;QACvE,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACpC,MAAM,OAAO,GAAG,IAAI,2CAAK,CAAC,MAAM,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9C,IAAI,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,CAAC,MAAU,EAAC,EAAE;YACzC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,MAAM;YACtC,OAAO,CAAC,MAAM,EAAE;QAClB,CAAC,CAAC;IACJ,CAAC;IAGD,eAAe;QACb,IAAI,CAAC,gBAAgB,EAAE;IACzB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;IACzB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,MAAM,CAAC,GAAG;QACR,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC;QAC3B,OAAO,OAAO,CAAC,kBAAkB,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC;IAC7D,CAAC;IAEK,UAAU;;YACd,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,aAAa,EAAC;gBACtC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAAC;gBAC3C,OAAM;aACP;YACD,IAAG,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAC;gBAC/B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;gBACnD,OAAO;aACR;YACD,IAAI,IAAI,GAAG,IAAI,IAAI;YACnB,IAAI,IAAI,GAAe;gBACrB,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE;gBACxB,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG;gBACnC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO;gBAC5C,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK;gBAC5D,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK;gBACtD,MAAM,EAAE,IAAI,CAAC,aAAa;gBAC1B,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK;gBAChD,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI;aACvC;YACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YACxC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,IAAI,CAAE,CAAC,MAAyB,EAAE,EAAE;gBACtE,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;gBAC7B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC;gBACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;IAGD,8EAA8E;IAC9E,gBAAgB;QACd,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAE,CAAC,IAAoB,EAAE,EAAE;gBACrF,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;gBACrC,YAAY,CAAC,OAAO,EAAE,CAAC;gBACvB,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,IAAI,UAAU,CAAC;gBACnF,IAAI,eAAe,GAAG,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,IAAI,UAAU,CAAC;gBACxF,IAAI,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC;gBAClE,IAAI,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC;gBAC7D,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;gBAC9B,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;gBAC9C,OAAO,CAAC,KAAK,CAAC;YAChB,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,sBAAsB,CAAC,MAAM;QAC3B,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QAC/B,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,GAAG,CAAC,QAAQ,EAAE,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QAC5F,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,GAAG,CAAC,QAAQ,EAAE,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;QAClF,OAAO,CAAC,EAAC,IAAI,EAAE,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,kBAAkB,CAAC,OAAO,EAAE,EAAC,KAAK,EAAE,OAAO,EAAC,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,EAAC,CAAC;IAC1G,CAAC;IAED,uBAAuB,CAAC,KAAK;QAC3B,IAAI,MAAM,GAAG,EAAE;QACf,IAAI,KAAK,GAAG,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;QACzC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YACnC,IAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;gBACrD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACtB;iBAAM,IAAG,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;gBAC3D,IAAI,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtE,IAAI,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;gBACpD,IAAI,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBAC3C,IAAI,WAAW,GAAG,YAAY,GAAG,YAAY,CAAC;gBAC9C,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,WAAW,CAAC;aACzC;SACF;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,SAAS;QACP,IAAI,QAAQ,GAAG,EAAE;QACjB,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,KAAI,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,IAAG,EAAE,EAAE,OAAO,EAAE,EAAC;YAC3C,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;YAC5G,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,GAAG,OAAO,CAAC,CAAC;YAClG,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,kBAAkB,CAAC,OAAO,EAAE,EAAC,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;SACnF;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,OAAO,CAAC,eAAe,EAAE,SAAS;QAChC,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,KAAI,IAAI,CAAC,GAAE,CAAC,EAAE,CAAC,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAC;YAC3C,IAAG,eAAe,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,EAAC;gBACjE,IAAI,UAAU,GAAG,eAAe,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;gBACnF,IAAI,WAAW,GAAG,eAAe,CAAC,UAAU,CAAC,CAAC,MAAM;gBACpD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;aAC3B;iBAAM,IAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,EAAC;gBACzE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;aACjB;SACF;QACD,OAAO,QAAQ;IACjB,CAAC;IAGD,eAAe,CAAC,QAAQ;QACxB,QAAO,QAAQ,EAAC;YACd,KAAK,KAAK;gBACR,OAAO,GAAG;gBACV,MAAM;SACP;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;YAC5C,uDAAuD;QACzD,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACb,QAAQ;QACV,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,GAAG;QACZ,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACtB,gIAAgI;IAClI,CAAC;CACF;;YAzTQ,mDAAM;YADN,uDAAW;YAEX,6EAAc;YACd,sFAAmB;YALnB,iEAAY;;AAiER,YAAY;IALxB,yDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,2KAAmC;;KAEpC,CAAC;GACW,YAAY,CA2PxB;AA3PwB;;;;;;;;;;;;;;;ACjEzB,iEAAe,qLAAqL,6HAA6H,cAAc,wCAAwC,ksBAAksB,89BAA89B,ovBAAovB,s3BAAs3B,oBAAoB,gEAAgE,oBAAoB,IAAI,sBAAsB,kMAAkM,gEAAgE,iEAAiE,uBAAuB,yNAAyN","sources":["./src/app/pages/transaction/transfer/transfer-routing.module.ts","./src/app/pages/transaction/transfer/transfer.module.ts","./src/app/pages/transaction/transfer/transfer.page.ts","./src/app/pages/transaction/transfer/transfer.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TransferPage } from './transfer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TransferPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TransferPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TransferPageRoutingModule } from './transfer-routing.module';\nimport { ComponentsModule } from './../../../components/components.module';\n\nimport { TransferPage } from './transfer.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TransferPageRoutingModule,\n    ReactiveFormsModule,\n    ComponentsModule\n  ],\n  declarations: [TransferPage]\n})\nexport class TransferPageModule {}\n","import { AlertService } from './../../../services/alert.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\nimport { TransactionsService } from 'src/app/services/transactions.service';\nimport { Transaction } from 'src/app/models/transaction.model';\nimport { SubSink } from 'subsink';\nimport {\n  Chart,\n  ChartType,\n  ArcElement,\n  LineElement,\n  BarElement,\n  PointElement,\n  BarController,\n  BubbleController,\n  DoughnutController,\n  LineController,\n  PieController,\n  PolarAreaController,\n  RadarController,\n  ScatterController,\n  CategoryScale,\n  LinearScale,\n  LogarithmicScale,\n  RadialLinearScale,\n  TimeScale,\n  TimeSeriesScale,\n  Filler,\n  Legend,\n  Title,\n  Tooltip,\n} from 'chart.js';\n\nChart.register(\n  ArcElement,\n  LineElement,\n  BarElement,\n  PointElement,\n  BarController,\n  BubbleController,\n  DoughnutController,\n  LineController,\n  PieController,\n  PolarAreaController,\n  RadarController,\n  ScatterController,\n  CategoryScale,\n  LinearScale,\n  LogarithmicScale,\n  RadialLinearScale,\n  TimeScale,\n  TimeSeriesScale,\n  Filler,\n  Legend,\n  Title,\n  Tooltip\n);\n\n@Component({\n  selector: 'app-transfer',\n  templateUrl: './transfer.page.html',\n  styleUrls: ['./transfer.page.scss'],\n})\nexport class TransferPage implements OnInit, OnDestroy {\n\n  subs = new SubSink()\n  chartedArray: any;\n  label: any\n  historyData: []\n  data = {\n    labels: this.getLabels(),\n    datasets: [\n    {\n      label: 'Transfers',\n      backgroundColor: 'rgb(72, 245, 66)',\n      pointBorderWidth: 0,\n      pointHoverRadius: 0,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 0,\n      pointRadius: 0,\n      pointHitRadius: 0,\n      borderColor: 'rgb(72, 245, 66)',\n      data: [0, 0,0,0,0,0,0,0,0],\n      fill: false\n    }]\n  };\n  config = {\n    type: 'bar' as ChartType,\n    data: this.data,\n    options: {\n      animation: {\n          duration: 5000,\n      },\n      responsive: true,\n      title: {\n        display: true,\n         position: 'top',\n         text: 'Line Chart',\n         fontSize: 12,\n         fontColor: 'rgb(14, 13, 13)'\n       },\n       legend: {\n        display: true,\n         position: 'bottom',\n         labels: {\n          fontColor: 'rgb(14, 13, 13)',\n           fontSize: 14\n         }\n       }\n    }\n  };\n  marketPrices = {\n    ngn: 0.002382246,\n    usd: 1,\n    eur: 1.048365,\n    cad: 0.77365\n  };\n  walletBal: number = this.transSrv.depWallet.balance;\n  enteredAmount: number = 0;\n  transfers: Transaction [] = []\n\n  timeFormat: Intl.DateTimeFormatOptions = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n  };\n  isButtonDisabled=false\n  transactionInfo = new FormGroup({\n    senderAddress: new FormControl({value: this.transSrv.depWallet.address, disabled: true}, [Validators.required]), //Wallet adress from server\n    senderAmount: new FormControl(0, Validators.required),\n    testField: new FormControl({value: '', disabled: true}, [Validators.required]),\n    senderCurr: new FormControl(this.transSrv.depWallet.currency, Validators.required), //Wallet currency from server\n    receiverAddress: new FormControl('', Validators.required),\n    receiverAmount: new FormControl({value: 0, disabled: true}, Validators.required),\n    receiverCurr: new FormControl('ngn', Validators.required),\n    remark: new FormControl('', Validators.required)\n  });\n\n  form: FormGroup;\n\n  isLoading = false;\n  sentCurr = 'usd';\n  receivedCurr = 'usd';\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private barcodeScanner: BarcodeScanner,\n    private transSrv: TransactionsService,\n    private alertSrv: AlertService\n  ) { }\n\n  ngOnInit() {\n    this.transactionInfo.get('senderAmount').valueChanges.subscribe(amount => {\n      this.enteredAmount = amount;\n    })\n    this.isButtonDisabled = false;\n    const canvas = document.getElementById('myChart') as HTMLCanvasElement;\n    const ctx = canvas.getContext('2d');\n    const myChart = new Chart(canvas,this.config);\n    this.loadTransactions().then((result: [])=> {\n      myChart.data.datasets[0].data = result\n      myChart.update()\n    })\n  }\n\n\n  ionViewDidEnter(){\n    this.loadTransactions()\n  }\n\n  ngOnDestroy(){\n    this.subs.unsubscribe()\n  }\n\n  dashboardPage(){\n    this.router.navigate(['dashboard']);\n  }\n\n  notificationsPage(){\n    this.router.navigate(['notifications']);\n  }\n\n  profilePage(){\n    this.router.navigate(['profile']);\n  }\n\n  toDate(arg){ //CONVERT RAW DATE TO REGULAR, UNDERSTANDABLE DATE\n    let rawDate = new Date(arg)\n    return rawDate.toLocaleDateString('en-US', this.timeFormat)\n  }\n\n  async onTransfer(){ //Submits the entered information to the backend\n    if(this.walletBal <= this.enteredAmount){\n      this.alertSrv.toast('Invalid Amount', 3000)\n      return\n    }\n    if(!(this.transactionInfo.valid)){\n      this.alertSrv.toast('Please fill required fields');\n      return;\n    }\n    let date = new Date\n    let data: Transaction= {\n      type: 'transfer',\n      date: date.toISOString(),\n      fromId: this.transSrv.depWallet._id,\n      fromAddress: this.transSrv.depWallet.address,\n      toAddress: this.transactionInfo.get('receiverAddress').value,\n      currency: this.transactionInfo.get('senderCurr').value,\n      amount: this.enteredAmount,\n      remark: this.transactionInfo.get('remark').value,\n      fromName: this.transSrv.depWallet.name\n    }\n    console.log(this.transactionInfo.valid);\n    this.isButtonDisabled = true;\n    this.transSrv.makeTransaction(data).then( (result: {message: string}) => {\n      console.log('result', result)\n      this.alertSrv.toast(result.message, 5000)\n      this.router.navigate(['wallets'])\n    });\n  }\n\n\n  //Fetch transactions from backend as well as, create Transaction history array\n  loadTransactions(){\n    return new Promise((resolve, reject) => {\n      this.subs.sink = this.transSrv.fetchTransactions().subscribe( (data: {transactions}) => {\n        let transactions = data.transactions;\n        transactions.reverse();\n        this.transfers = transactions.filter(transaction => transaction.type == 'transfer')\n        let transferHistory = transactions.filter(transaction => transaction.type == 'transfer')\n        let mappedArray = transferHistory.map(this.transferHistoryMapping)\n        let chartedArray = this.transferHistoryCharting(mappedArray);\n        let labels = this.getLabels();\n        let final = this.getData(chartedArray, labels)\n        resolve(final)\n      })\n    })\n  }\n\n  transferHistoryMapping(record){ //Maps backend array to new array passed round in the frontend\n    let day = new Date(record.date)\n    const date = new Date(Date.UTC(day.getFullYear(), day.getMonth(), day.getDate())).getDate();\n    const month = new Date(Date.UTC(day.getFullYear(), day.getMonth(), day.getDate()))\n    return ({date: date + '-' + month.toLocaleDateString('en-US', {month: 'short'}), amount: record.amount})\n  }\n\n  transferHistoryCharting(array){ //Converts mapped backend array to array usable by the chart constructor\n    let newArr = []\n    let dates = array.map( elem => elem.date)\n    for(let i = 0; i < array.length; i++){\n      if(!newArr.some((element) => element.date == dates[i])){\n        newArr.push(array[i])\n      } else if(newArr.some((element) => element.date == dates[i])){\n        let foundIndex = newArr.findIndex(element => element.date == dates[i])\n        let newArrAmount = Number(newArr[foundIndex].amount)\n        let oldArrAmount = Number(array[i].amount);\n        let totalAmount = newArrAmount + oldArrAmount;\n        newArr[foundIndex].amount = totalAmount;\n      }\n    }\n    return newArr;\n  }\n\n  getLabels(){ //Get previous 30 days and use as labels in bar chart\n    let newArray = []\n    let today = new Date();\n    for(let daysAgo = 0; daysAgo <=30; daysAgo++){\n      const date = new Date(Date.UTC(today.getFullYear(), today.getMonth(), today.getDate() - daysAgo)).getDate();\n      const month = new Date(Date.UTC(today.getFullYear(), today.getMonth(), today.getDate() - daysAgo))\n      newArray.unshift(date + '-' + month.toLocaleDateString('en-US', {month: 'short'}))\n    }\n    return newArray;\n  }\n\n  getData(transactionData, datesData){ //Finalizes the formation of data array to be used with in chart\n    let finalArr = [];\n    for(let i= 0; i <= datesData.length - 1; i++){\n      if(transactionData.some((element) => element.date == datesData[i])){\n        let foundIndex = transactionData.findIndex(element => element.date == datesData[i])\n        let foundAmount = transactionData[foundIndex].amount\n        finalArr.push(foundAmount)\n      } else if(!transactionData.some((element) => element.date == datesData[i])){\n        finalArr.push(0)\n      }\n    }\n    return finalArr\n  }\n\n\n  getCurrencyIcon(currName) { //Get's currency in UTF-8 encoding\n  switch(currName){\n    case 'ngn':\n      return '₦'\n      break;\n    }\n  }\n\n  scanCode(){\n    this.barcodeScanner.scan().then(barcodeData => {\n      // success. barcodeData is the data returned by scanner\n    }).catch(err => {\n      // error\n    });\n  }\n\n  toCurrency(num){ //SETS TO TWO DECIMAL PLACE\n    return num.toFixed(2);\n    // [value]=\"(receiverAmountInput.value * marketPrices[receiverCurrency.value] * 1/marketPrices[senderCurrency.value]).toFixed(2)\n  }\n}\n","export default \"<app-sidebar></app-sidebar>\\n<ion-content class=\\\"mainbackground\\\">\\n  <app-header></app-header>\\n  <div class=\\\"body\\\">\\n    <div class=\\\"container\\\" style=\\\"padding-bottom: 50px;\\\">\\n\\n      <div [ngClass]=\\\"(walletBal > enteredAmount)? 'balbox' : 'balboxErr'\\\">\\n        <h4 style=\\\"text-align: center;\\\">Balance: {{(walletBal - enteredAmount).toFixed(2)}}</h4>\\n      </div>\\n      <div class=\\\"form-box\\\">\\n        <form (ngSubmit)=\\\"onTransfer()\\\" *ngIf=\\\"!isLoading\\\" [formGroup]=\\\"transactionInfo\\\">\\n          <div class=\\\"form-group flexContainer\\\">\\n\\n            <div class=\\\"ion-padding\\\">Your Address:</div><input type=\\\"text\\\" class=\\\"form-control inputField\\\" id=\\\"senderAddress\\\" formControlName=\\\"senderAddress\\\" required=\\\"true\\\" ionFocus=\\\"focus()\\\">\\n\\n            <input type=\\\"number\\\" formControlName=\\\"senderAmount\\\" placeholder=\\\"Amount\\\"\\n            class=\\\"form-control inputFieldTwo\\\" ionFocus=\\\"focus()\\\">\\n\\n            <ion-select interface=\\\"popover\\\" value=\\\"usd\\\"\\n            formControlName=\\\"senderCurr\\\" style=\\\"color: white;\\\"\\n            >\\n              <ion-select-option value=\\\"usd\\\" selected=\\\"true\\\">USD</ion-select-option>\\n              <ion-select-option value=\\\"ngn\\\">NGN</ion-select-option>\\n              <ion-select-option value=\\\"cad\\\">CAD</ion-select-option>\\n              <ion-select-option value=\\\"eur\\\">EUR</ion-select-option>\\n            </ion-select>\\n          </div>\\n\\n          <!-- Receiver Info -->\\n          <div class=\\\"form-group flexContainer\\\">\\n            <div class=\\\"ion-padding\\\">Receiver:</div>\\n            <input type=\\\"text\\\" formControlName=\\\"receiverAddress\\\"\\n            class=\\\"form-control inputField\\\" required=\\\"true\\\" ionFocus=\\\"focus()\\\">\\n\\n            <input type=\\\"number\\\" formControlName=\\\"receiverAmount\\\"\\n            class=\\\"form-control inputFieldTwo disabled\\\" placeholder=\\\"Amount\\\"\\n            ionFocus=\\\"focus()\\\" >\\n\\n            <ion-select interface=\\\"popover\\\"value=\\\"ngn\\\"\\n            formControlName=\\\"receiverCurr\\\" style=\\\"color: white;\\\">\\n              <ion-select-option value=\\\"usd\\\">USD</ion-select-option>\\n              <ion-select-option value=\\\"ngn\\\">NGN</ion-select-option>\\n              <ion-select-option value=\\\"cad\\\">CAD</ion-select-option>\\n              <ion-select-option value=\\\"eur\\\">EUR</ion-select-option>\\n            </ion-select>\\n\\n          </div>\\n          <ion-textarea formControlName=\\\"remark\\\" cols=\\\"5\\\" rows=\\\"3\\\" placeholder=\\\"Remark\\\" class=\\\"remark\\\"></ion-textarea>\\n          <button type=\\\"submit\\\" class=\\\"theme btn btn-primary\\\" [disabled]=\\\"isButtonDisabled\\\">Transfer</button>\\n        </form>\\n      </div>\\n    </div>\\n    <!-- Transfer History Chart -->\\n    <div class=\\\"container\\\">\\n      <div class=\\\"chart-box\\\" style=\\\"padding-top: 120px;\\\">\\n        <canvas id=\\\"myChart\\\" aria-label=\\\"Loading Data...\\\" role=\\\"chart\\\">\\n          <p>No content.</p>\\n        </canvas>\\n      </div>\\n    </div>\\n    <div class=\\\"head-title\\\">\\n      <div class=\\\"container\\\">Recent Transfers</div>\\n    </div>\\n    <div class=\\\"transactionlist\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"transactions-box\\\" *ngFor=\\\"let transfer of transfers\\\"><div slot=\\\"header\\\">\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col size=\\\"2\\\">\\n                <div class=\\\"left\\\">\\n                  <div class=\\\"icon bg-success\\\">\\n                    <img src=\\\"../../../assets/images/card.svg\\\" class=\\\"w-100 card-icon\\\" />\\n                  </div>\\n                </div>\\n              </ion-col>\\n              <ion-col size=\\\"6\\\">\\n                <div class=\\\"middle\\\">\\n                  <div class=\\\"title\\\">{{transfer.toAddress}}</div>\\n                  <div class=\\\"time ion-padding-top\\\">{{transfer.fromName}} - {{transfer.fromAddress}}</div>\\n                </div>\\n              </ion-col>\\n              <ion-col size=\\\"4\\\">\\n                <div class=\\\"ion-text-end\\\">\\n                  <div class=\\\"price text-success\\\">{{transfer.amount | currency: getCurrencyIcon(transfer.currency)}}</div>\\n                  <div class =\\\"time ion-padding-top\\\">{{toDate(transfer.date)}}</div>\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n        </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ion-content>\\n<app-footer></app-footer>\\n\";"],"names":[],"sourceRoot":"webpack:///"}